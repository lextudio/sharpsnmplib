<Project Sdk="MSBuild.Sdk.Extras">
  <PropertyGroup>
    <AssemblyName>SharpSnmpLib</AssemblyName>
    <RootNamespace>Lextm.SharpSnmpLib</RootNamespace>
    <UseWPF>false</UseWPF>
    <UseWindowsForms>false</UseWindowsForms>
    <TargetFrameworks Condition="'$(MSBuildAssemblyVersion)' == '17.0' ">net6.0;netstandard2.0;net471</TargetFrameworks>
    <TargetFrameworks Condition="'$(MSBuildAssemblyVersion)' == '16.0' ">netstandard2.0;net471</TargetFrameworks>
    <PackageId>Lextm.SharpSnmpLib</PackageId>
    <Title>#SNMP Library</Title>
    <NeutralLanguage>en-US</NeutralLanguage>
    <Authors>Malcolm Crowe,Lex Li,and other contributors.</Authors>
    <Description>#SNMP (SharpSNMP) Library is an open source library for developers who target Microsoft .NET/Xamarin/Mono platforms. It's developed in C# and can be used for F#, VB.NET, Oxygene, and more.</Description>
    <Summary>#SNMP (SharpSNMP) Library is an open source library for developers who target Microsoft .NET/Xamarin/Mono platforms. It's developed in C# and can be used for F#, VB.NET, Oxygene, and more. It supports .NET Framework 4.7.1 and above, as well as .NET Standard 2.0 and above.</Summary>
    <PackageRequireLicenseAcceptance>true</PackageRequireLicenseAcceptance>
    <PackageProjectUrl>https://docs.sharpsnmp.com/</PackageProjectUrl>
    <RepositoryUrl>https://github.com/lextudio/sharpsnmplib.git</RepositoryUrl>
    <RepositoryType>git</RepositoryType>
    <PublishRepositoryUrl>true</PublishRepositoryUrl>
    <EmbedUntrackedSources>true</EmbedUntrackedSources>
    <AllowedOutputExtensionsInPackageBuildOutputFolder>$(AllowedOutputExtensionsInPackageBuildOutputFolder);.pdb</AllowedOutputExtensionsInPackageBuildOutputFolder>
    <PackageReleaseNotes>https://github.com/lextudio/sharpsnmplib/releases</PackageReleaseNotes>
    <Copyright>Copyright (c) 2008-2022 Malcolm Crowe, Lex Li, and other contributors.</Copyright>
    <PackageTags>smi snmp mib</PackageTags>
    <SignAssembly>true</SignAssembly>
    <AssemblyOriginatorKeyFile>sharpsnmplib.snk</AssemblyOriginatorKeyFile>
    <AssemblyOriginatorKeyMode>File</AssemblyOriginatorKeyMode>
    <GeneratePackageOnBuild>true</GeneratePackageOnBuild>
    <PackageLicenseExpression>MIT</PackageLicenseExpression>
    <AndroidUseIntermediateDesignerFile>False</AndroidUseIntermediateDesignerFile>
    <GenerateDocumentationFile>true</GenerateDocumentationFile>
    <LangVersion>latest</LangVersion>
    <Nullable>enable</Nullable>
    <IsTrimmable>true</IsTrimmable>
    <IncludeSymbols>true</IncludeSymbols>
    <DebugType>portable</DebugType>
    <SymbolPackageFormat>snupkg</SymbolPackageFormat>
  </PropertyGroup>
  <PropertyGroup>
    <NoWarn>S5547;S907;S1133;S101;S1135</NoWarn>
  </PropertyGroup>
  <ItemGroup>
    <PackageReference Include="DTLS2.Net" Version="1.1.5" />
    <PackageReference Include="GitVersion.MsBuild" Version="5.12.0">
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
      <PrivateAssets>all</PrivateAssets>
    </PackageReference>
    <PackageReference Include="Microsoft.SourceLink.GitHub" Version="1.1.1" PrivateAssets="all" />
    <PackageReference Include="Nullable" Version="1.3.1">
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
      <PrivateAssets>all</PrivateAssets>
    </PackageReference>
    <PackageReference Include="SonarAnalyzer.CSharp" Version="8.55.0.65544">
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
      <PrivateAssets>all</PrivateAssets>
    </PackageReference>
  </ItemGroup>
  <ItemGroup Condition="'$(TargetFramework)'=='net471'">
    <Reference Include="System.Configuration" />
  </ItemGroup>
  <ItemGroup Condition="'$(TargetFramework)' == 'xamarin.ios10'">
    <Reference Include="System.Runtime.Serialization" />
  </ItemGroup>
  <ItemGroup Condition="'$(TargetFramework)' == 'monoandroid80'">
    <Reference Include="System.Runtime.Serialization" />
  </ItemGroup>
  <Target Name="PostBuild" AfterTargets="PostBuildEvent" Condition=" '$(OS)' == 'Windows_NT' ">
    <Exec Command="powershell -ExecutionPolicy Bypass -file ..\sign.assembly.ps1 &quot;$(TargetPath)&quot;" />
  </Target>
</Project>
